{"version":3,"sources":["../src/agent.ts","../src/index.ts"],"sourcesContent":["// ====== Imports ======\n// @ts-ignore: Will be available only in ElizaOS runtime\nlet kv: { set: (key: string, val: string) => Promise<void> };\n\ntry {\n  kv = await import(\"@elizaos/kv\");\n} catch (e) {\n  console.warn(\"⚠️ Falling back to local KV\");\n  const fs = await import(\"fs/promises\");\n  kv = {\n    set: async (key: string, val: string) => {\n      await fs.writeFile(`.local-kv-${key}.json`, val, \"utf-8\");\n    },\n  };\n}\n\nimport axios from \"axios\";\n\n// ====== Types ======\ntype RiskLevel = \"low\" | \"high\";\n\ninterface PoolInfo {\n  address: string;\n  apy: number;\n  platform: string;\n  asset: string;\n}\n\ninterface StrategyResult {\n  timestamp: number;\n  trend: \"uptrend\" | \"downtrend\";\n  risk: RiskLevel;\n  selectedPool: PoolInfo;\n}\n\n// ====== Constants ======\nconst DEFILLAMA_API = \"https://yields.llama.fi\";\nconst COINGECKO_API = \"https://api.coingecko.com/api/v3\";\nconst USDC_CG_ID = \"usd-coin\";\nconst DAYS_LOOKBACK = 25;\n\n// ====== Trend Detection ======\nasync function isDowntrend(assetId: string): Promise<boolean> {\n  const url = `${COINGECKO_API}/coins/${assetId}/market_chart?vs_currency=usd&days=${DAYS_LOOKBACK}`;\n  const res = await axios.get(url);\n  const prices = res.data.prices.map((p: any) => p[1]);\n\n  if (prices.length < 8) throw new Error(\"Not enough price history for trend detection\");\n\n  const current = prices[prices.length - 1];\n  const day7 = prices[prices.length - 8]; // 7 days ago\n  const day25 = prices[0]; // 25 days ago\n\n  return current < day7 && current < day25;\n}\n\n// ====== Yield Fetchers ======\nasync function getDefiLlamaYields(): Promise<any[]> {\n  const res = await axios.get(`${DEFILLAMA_API}/pools`);\n  return res.data.data;\n}\n\nasync function getBestLowRiskPool(): Promise<PoolInfo | null> {\n  const yields = await getDefiLlamaYields();\n\n  return yields\n    .filter(y =>\n      y.project?.toLowerCase().includes(\"aave\") &&\n      y.apyBase &&\n      y.symbol?.toLowerCase() === 'usdc'\n    )\n    .map(y => ({\n      address: y.pool,\n      apy: y.apyBase,\n      platform: \"Aave\",\n      asset: y.symbol,\n    }))\n    .sort((a, b) => b.apy - a.apy)[0] || null;\n}\n\nasync function getBestHighRiskPool(): Promise<PoolInfo | null> {\n  const yields = await getDefiLlamaYields();\n\n  return yields\n    .filter(y =>\n      y.project?.toLowerCase().includes(\"pendle\") &&\n      y.apyBase &&\n      y.symbol?.toLowerCase() === 'usdc'\n    )\n    .map(y => ({\n      address: y.pool,\n      apy: y.apyBase,\n      platform: \"Pendle\",\n      asset: y.symbol,\n    }))\n    .sort((a, b) => b.apy - a.apy)[0] || null;\n}\n\n// ====== Run for a given risk level ======\nasync function runForRisk(risk: RiskLevel) {\n  try {\n    const downtrend = await isDowntrend(USDC_CG_ID);\n    const trend: \"uptrend\" | \"downtrend\" = downtrend ? \"downtrend\" : \"uptrend\";\n\n    const bestPool =\n      risk === \"low\" ? await getBestLowRiskPool() : await getBestHighRiskPool();\n\n    if (!bestPool) {\n      console.warn(`⚠️ No ${risk}-risk pool found.`);\n      return;\n    }\n\n    const result: StrategyResult = {\n      timestamp: Date.now(),\n      trend,\n      risk,\n      selectedPool: bestPool,\n    };\n\n    await kv.set(`strategy:${risk}`, JSON.stringify(result));\n    console.log(`✅ Stored ${risk}-risk strategy:`, result);\n  } catch (err) {\n    console.error(`❌ Failed to process ${risk} strategy:`, err);\n  }\n}\n\n// ====== Main Runner ======\nexport async function main() {\n  await runForRisk(\"low\");\n  await runForRisk(\"high\");\n}\n\n// ====== Run Periodically or Once ======\nif (import.meta.url === `file://${process.argv[1]}`) {\n  // Run every 15 minutes if you want\n  const INTERVAL_MS = 15 * 60 * 1000;\n\n  console.log(\"⚙️ Eliza strategy agent started (15 min interval)\");\n\n  // Initial run\n  await main();\n\n  // Run every 15 mins (only if long-running process like `node agent.js`)\n  setInterval(() => {\n    main().catch(err => console.error(\"Agent error:\", err));\n  }, INTERVAL_MS);\n}\n","// src/index.ts\n\n// Import the 'main' function from your agent logic file (e.g., src/agent.ts)\nimport { main as agentMain } from './agent'; // Import it and rename it to 'agentMain' for clarity\n\n// Define a local function to orchestrate the start-up\nasync function startApplication() { // Renamed from 'main' to avoid conflict\n  try {\n    // Call the imported agent's main function\n    await agentMain(); // Use the renamed import\n    // Or if you need to pass a risk level:\n    // await agentMain(\"low\");\n    console.log(\"Agent started successfully!\");\n  } catch (error) {\n    console.error(\"AI agent failed:\", error);\n  }\n}\n\n// Call the new start function\nstartApplication();"],"mappings":"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","names":[]}